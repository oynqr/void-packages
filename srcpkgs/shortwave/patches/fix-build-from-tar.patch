--- a/build-aux/cargo.sh
+++ b/build-aux/cargo.sh
@@ -5,9 +5,15 @@ export MESON_SOURCE_ROOT="$2"
 export APP_OUTPUT="$3"
 export APP_LOCALEDIR="$4"
 export APP_PROFILE="$5"
+export XBPS_RUST_TARGET="$6"
 
 export CARGO_TARGET_DIR="$MESON_BUILD_ROOT"/target
-export CARGO_HOME="$MESON_BUILD_ROOT"/cargo-home
+
+export CARGO_OUTPUT_DIR="$CARGO_TARGET_DIR"
+if ! test -z "$XBPS_RUST_TARGET"
+then
+    export CARGO_OUTPUT_DIR="${CARGO_OUTPUT_DIR}/${XBPS_RUST_TARGET}"
+fi
 
 echo "** RUST VERSION **"
 rustc --version
@@ -17,10 +23,10 @@ then
     echo "** DEBUG MODE **"
     cargo build --manifest-path \
         "$MESON_SOURCE_ROOT"/Cargo.toml && \
-        cp "$CARGO_TARGET_DIR"/debug/shortwave $APP_OUTPUT
+        cp "$CARGO_OUTPUT_DIR"/debug/shortwave $APP_OUTPUT
 else
     echo "** RELEASE MODE **"
     cargo build --manifest-path \
         "$MESON_SOURCE_ROOT"/Cargo.toml --release && \
-        cp "$CARGO_TARGET_DIR"/release/shortwave $APP_OUTPUT
+        cp "$CARGO_OUTPUT_DIR"/release/shortwave $APP_OUTPUT
 fi
--- a/meson.build
+++ b/meson.build
@@ -26,10 +26,11 @@ dependency('gstreamer-bad-audio-1.0', version: '>= 1.16')
 name       = 'Shortwave'
 app_id     = 'de.haeckerfelix.Shortwave'
 profile    = get_option('profile')
-vcs_tag    = run_command('git', 'rev-parse', '--short', 'HEAD').stdout().strip()
+vcs_tag    = get_option('tag')
 localedir  = join_paths(get_option('prefix'), get_option('localedir'))
 datadir    = get_option('datadir')
 pkgdatadir = join_paths(get_option('prefix'), datadir, meson.project_name())
+xbps_rust_target = get_option('xbps_rust_target')
 
 # Change app id for development builds
 if profile == 'development'
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -8,3 +8,13 @@ option (
   ],
   value: 'default'
 )
+option (
+  'tag',
+  type: 'string',
+  value: 'none'
+)
+option (
+  'xbps_rust_target',
+  type: 'string',
+  value: ''
+)
--- a/src/meson.build
+++ b/src/meson.build
@@ -110,6 +110,7 @@ cargo_release = custom_target(
     meson.source_root(),
     '@OUTPUT@',
     localedir,
-    profile
+    profile,
+    xbps_rust_target
   ]
 )
